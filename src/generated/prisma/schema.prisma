// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  bio       String?
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
  likes     Like[]
  comment   Comment[]
}

model Post {
  id            Int       @id @default(autoincrement())
  title         String    @db.VarChar(255)
  content       String    @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  author        User?     @relation(fields: [authorId], references: [id])
  authorId      Int
  totalLikes    Int       @default(0)
  totalComments Int       @default(0)
  likes         Like[]
  comments      Comment[]
  deleteAt      DateTime?
}

model Like {
  id        Int      @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
